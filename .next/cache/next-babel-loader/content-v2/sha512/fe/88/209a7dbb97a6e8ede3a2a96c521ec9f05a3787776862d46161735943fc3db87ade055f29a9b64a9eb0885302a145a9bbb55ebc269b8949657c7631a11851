{"ast":null,"code":"import { MongoClient } from 'mongodb'; // functions that contains only server side code\n// all these API routes will run on the server\n// these functions only are triggered when a request is sent to this route --> /api/new-meetup\n// POST /api/new-meetup\n// route -> /api/new-meetup\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    // the form will contained -> title, description, image, description...\n    //const data = req.body; // data from the request\n    //const {title, image, address, description} = data;\n    //const { title, image, address, description } = req.body.data\n    const data = req.body; // to insert as document into the db\n    // give a connection client eventually or async\n    // This database will be created --> Meetups\n\n    const client = await MongoClient.connect('mongodb+srv://kavajaga:Events2022@cluster0.zvp9ap3.mongodb.net/Meetups?retryWrites=true&w=majority'); // create the db to get hold of the db \n    // if the db is not created, it'll be created on the fly --> /Meetups\n\n    const db = client.db(); // Create the collection, which holds multiple documents\n    // inside db.collection('myCollection')\n\n    const meetupsCollection = db.collection('meetups'); // insert document, which is an object with -> title, image...\n    // result will be the object which is an async operation, \n    // the result is an object, and insertOne returns a promise\n\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result); // close the connection\n\n    client.close(); // Send the response to the client\n    // 201 -> it was successfully added.\n\n    res.status(201).json({\n      message: 'Meetup inserted!'\n    });\n  }\n} // you have to export this function\n\n\nexport default handler; //kavajaga\n//Events2022","map":{"version":3,"sources":["/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;AACA;AACA;AACA;AAEA;;AAEA,eAAeC,OAAf,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;AAChC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACA;AACA;AAEA;AAEA,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CAPyB,CAOF;AAEvB;AACC;;AACD,UAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,oGAApB,CAArB,CAXyB,CAY1B;AACA;;AACC,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAdyB,CAgBzB;AACA;;AACA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAlByB,CAmBzB;AACA;AACA;;AACA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAvByB,CAwBzB;;AACAL,IAAAA,MAAM,CAACS,KAAP,GAzByB,CA2BzB;AACA;;AACAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAArB;AAEH;AACA,C,CAED;;;AACA,eAAelB,OAAf,C,CAEA;AACA","sourcesContent":["import { MongoClient } from 'mongodb'\n\n// functions that contains only server side code\n// all these API routes will run on the server\n// these functions only are triggered when a request is sent to this route --> /api/new-meetup\n// POST /api/new-meetup\n\n// route -> /api/new-meetup\n\nasync function handler (req, res) {\n  if (req.method === 'POST') {\n    // the form will contained -> title, description, image, description...\n    //const data = req.body; // data from the request\n    //const {title, image, address, description} = data;\n\n    //const { title, image, address, description } = req.body.data\n\n    const data = req.body; // to insert as document into the db\n\n    // give a connection client eventually or async\n     // This database will be created --> Meetups\n    const client = await MongoClient.connect('mongodb+srv://kavajaga:Events2022@cluster0.zvp9ap3.mongodb.net/Meetups?retryWrites=true&w=majority')\n   // create the db to get hold of the db \n   // if the db is not created, it'll be created on the fly --> /Meetups\n    const db = client.db();\n\n    // Create the collection, which holds multiple documents\n    // inside db.collection('myCollection')\n    const meetupsCollection = db.collection('meetups')\n    // insert document, which is an object with -> title, image...\n    // result will be the object which is an async operation, \n    // the result is an object, and insertOne returns a promise\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result);\n    // close the connection\n    client.close();\n\n    // Send the response to the client\n    // 201 -> it was successfully added.\n    res.status(201).json({message: 'Meetup inserted!'})\n\n}\n}\n\n// you have to export this function\nexport default handler\n\n//kavajaga\n//Events2022\n"]},"metadata":{},"sourceType":"module"}