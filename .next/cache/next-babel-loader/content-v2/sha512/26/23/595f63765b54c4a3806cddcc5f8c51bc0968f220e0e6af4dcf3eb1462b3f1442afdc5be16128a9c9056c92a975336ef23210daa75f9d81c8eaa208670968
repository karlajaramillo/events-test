{"ast":null,"code":"import _regeneratorRuntime from \"/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.js\",\n    _s = $RefreshSig$();\n\n//pages>new-meetup>index.js\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\nimport { useRouter } from 'next/router';\n\nfunction NewMeetupPage() {\n  _s();\n\n  // create router object\n  var router = useRouter();\n\n  function addMeetupHandler(_x) {\n    return _addMeetupHandler.apply(this, arguments);\n  } // child-> NewMeetupForm is the child component\n  // parent -> 'NewMeetupPage' page\n  // The child: when the submit button is clicked, the event will send the 'object' with\n  // all the information of the form to the 'onAddMeetup' function,\n  // and this will triggered in the parent -> addMeetupHandler, that receives the object passed by the child\n\n\n  function _addMeetupHandler() {\n    _addMeetupHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredMeetupData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/new-meetup', {\n                //\n                method: 'POST',\n                // convert into JSON with the JSON.stringify method\n                // enteredMeetupData --> the object send by the form -> {title: '', image:''}\n                body: JSON.stringify(enteredMeetupData),\n                headers: {\n                  // headers to make clear we're sending JSON data to the API\n                  'Content-Type': 'application/json' // this means we're sending JSON\n\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              alert('hello');\n              console.log(data); // To send the user to the root of the app\n\n              router.push('/');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Events for Developers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"Events for Developers\",\n        content: \"Add events for developers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n      onAddMeetup: addMeetupHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewMeetupPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = NewMeetupPage;\nexport default NewMeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetupPage\");","map":{"version":3,"sources":["/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.js"],"names":["Head","Fragment","NewMeetupForm","useRouter","NewMeetupPage","router","addMeetupHandler","enteredMeetupData","fetch","method","body","JSON","stringify","headers","response","json","data","alert","console","log","push"],"mappings":";;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,aAAT,GAA0B;AAAA;;AACxB;AACA,MAAMC,MAAM,GAAGF,SAAS,EAAxB;;AAFwB,WAITG,gBAJS;AAAA;AAAA,IA2BxB;AACA;AACA;AACA;AACA;;;AA/BwB;AAAA,iFAIxB,iBAAiCC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGyBC,KAAK,CAAC,iBAAD,EAAoB;AAC9C;AACAC,gBAAAA,MAAM,EAAE,MAFsC;AAG9C;AACA;AACAC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,iBAAf,CALwC;AAM9CM,gBAAAA,OAAO,EAAE;AACP;AACA,kCAAgB,kBAFT,CAE4B;;AAF5B;AANqC,eAApB,CAH9B;;AAAA;AAGQC,cAAAA,QAHR;AAAA;AAAA,qBAgBqBA,QAAQ,CAACC,IAAT,EAhBrB;;AAAA;AAgBQC,cAAAA,IAhBR;AAiBEC,cAAAA,KAAK,CAAC,OAAD,CAAL;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAlBF,CAmBE;;AACAX,cAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;;AApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJwB;AAAA;AAAA;;AAiCxB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,uBADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,aAAD;AAAe,MAAA,WAAW,EAAEd;AAA5B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA7CQF,a;UAEQD,S;;;KAFRC,a;AA8CT,eAAeA,aAAf","sourcesContent":["//pages>new-meetup>index.js\nimport Head from 'next/head'\nimport { Fragment } from 'react'\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm'\nimport { useRouter } from 'next/router'\n\nfunction NewMeetupPage () {\n  // create router object\n  const router = useRouter()\n\n  async function addMeetupHandler (enteredMeetupData) {\n    // sent the request to the folder 'api' and name of the file --> new-meetup\n    // we're sending the object from the form to the DB\n    const response = await fetch('/api/new-meetup', {\n      //\n      method: 'POST',\n      // convert into JSON with the JSON.stringify method\n      // enteredMeetupData --> the object send by the form -> {title: '', image:''}\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        // headers to make clear we're sending JSON data to the API\n        'Content-Type': 'application/json' // this means we're sending JSON\n      }\n    })\n    // then after the fetch we'll have the data from the response\n    // from the fetch I will have the data from the response.\n    const data = await response.json()\n    alert('hello')\n    console.log(data)\n    // To send the user to the root of the app\n    router.push('/')\n  }\n\n  // child-> NewMeetupForm is the child component\n  // parent -> 'NewMeetupPage' page\n  // The child: when the submit button is clicked, the event will send the 'object' with\n  // all the information of the form to the 'onAddMeetup' function,\n  // and this will triggered in the parent -> addMeetupHandler, that receives the object passed by the child\n\n  return (\n    <Fragment>\n      <Head>\n        <title>Events for Developers</title>\n        <meta\n          name='Events for Developers'\n          content='Add events for developers'\n        />\n      </Head>\n      <NewMeetupForm onAddMeetup={addMeetupHandler}></NewMeetupForm>\n    </Fragment>\n  )\n}\nexport default NewMeetupPage\n"]},"metadata":{},"sourceType":"module"}