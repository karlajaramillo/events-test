{"ast":null,"code":"import _regeneratorRuntime from \"/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.js\";\n//pages>new-meetup>index.js\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\n\nfunction NewMeetupPage() {\n  function addMeetupHandler(_x) {\n    return _addMeetupHandler.apply(this, arguments);\n  } // child-> NewMeetupForm is the child component \n  // parent -> 'NewMeetupPage' page\n  // The child: when the submit button is clicked, the event will send the 'object' with \n  // all the information of the form to the 'onAddMeetup' function, \n  // and this will triggered in the parent -> addMeetupHandler, that receives the object passed by the child\n\n\n  function _addMeetupHandler() {\n    _addMeetupHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredMeetupData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/new-meetup', {\n                //\n                method: 'POST',\n                // convert into JSON with the JSON.stringify method\n                // enteredMeetupData --> the object send by the form -> {title: '', image:''}\n                body: JSON.stringify(enteredMeetupData),\n                headers: {\n                  // headers to make clear we're sending JSON data to the API\n                  'Content-Type': 'application/json' // this means we're sending JSON\n\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(enteredMeetupData);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n\n_c = NewMeetupPage;\nexport default NewMeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetupPage\");","map":{"version":3,"sources":["/Users/monina/Desktop/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.js"],"names":["NewMeetupForm","NewMeetupPage","addMeetupHandler","enteredMeetupData","fetch","method","body","JSON","stringify","headers","response","json","data","console","log"],"mappings":";;;;AAAA;AACA,OAAOA,aAAP,MAA0B,wCAA1B;;AACA,SAASC,aAAT,GAA0B;AAAA,WACTC,gBADS;AAAA;AAAA,IAqBxB;AACA;AACA;AACA;AACA;;;AAzBwB;AAAA,iFACxB,iBAAiCC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEyBC,KAAK,CAAC,iBAAD,EAAoB;AAC9C;AACAC,gBAAAA,MAAM,EAAE,MAFsC;AAG9C;AACA;AACAC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,iBAAf,CALwC;AAM9CM,gBAAAA,OAAO,EAAE;AACP;AACA,kCAAgB,kBAFT,CAE6B;;AAF7B;AANqC,eAApB,CAF9B;;AAAA;AAEQC,cAAAA,QAFR;AAAA;AAAA,qBAeqBA,QAAQ,CAACC,IAAT,EAfrB;;AAAA;AAeQC,cAAAA,IAfR;AAiBEC,cAAAA,OAAO,CAACC,GAAR,CAAYX,iBAAZ;;AAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;AAAA;AAAA;;AA2BxB,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;;KA7BQD,a;AA8BT,eAAeA,aAAf","sourcesContent":["//pages>new-meetup>index.js\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm'\nfunction NewMeetupPage () {\n  async function addMeetupHandler (enteredMeetupData) {\n    // sent the request to the folder 'api' and name of the file --> new-meetup\n    const response = await fetch('/api/new-meetup', {\n      //\n      method: 'POST', \n      // convert into JSON with the JSON.stringify method\n      // enteredMeetupData --> the object send by the form -> {title: '', image:''}\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        // headers to make clear we're sending JSON data to the API\n        'Content-Type': 'application/json', // this means we're sending JSON\n      }\n    });\n    // then after the fetch we'll have the data from the response\n    // from the fetch I will have the data from the response. \n    const data = await response.json();\n\n    console.log(enteredMeetupData)\n  }\n\n  // child-> NewMeetupForm is the child component \n  // parent -> 'NewMeetupPage' page\n  // The child: when the submit button is clicked, the event will send the 'object' with \n  // all the information of the form to the 'onAddMeetup' function, \n  // and this will triggered in the parent -> addMeetupHandler, that receives the object passed by the child\n\n  return <NewMeetupForm onAddMeetup={addMeetupHandler}></NewMeetupForm>\n  \n}\nexport default NewMeetupPage\n"]},"metadata":{},"sourceType":"module"}